<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.PersonMapper">
	<resultMap type="com.entity.Person" id="personMap">
		<id column="id" property="id" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
	</resultMap>
	<select id="SelectAll" resultType="com.entity.Person">
		select id,name,sex,age,phone from person
	</select>
	<select id="SelectByid" parameterType="java.lang.Integer" resultType="com.entity.Person">
	  select id,name,sex,age,phone from person
	  where id=#{id}
	</select>
	
	<!-- mapper的接口中，给这个方法的参数加上@Param(value=“name”)，这样就能在.xml中使用#{id,jdbcType=VARCHAR} 了
	<select id="SeclectByName" parameterType="java.lang.String" resultType="com.entity.Person">
		select id,name,sex,age,phone from person
		<if test="name!=null&amp;&amp;name!=''">
			where name = #{name,jdbcType=VARCHAR} or name like
			"%"#{name,jdbcType=VARCHAR}"%"
		</if>
	</select> -->
	<!-- 在使用mybaitis传参数的时候，如果仅传入一个类型为String的参数，那么在 xml文件中应该使用_parameter来代替参数名。 -->
	<select id="SeclectByName" parameterType="java.lang.String" resultType="com.entity.Person">
		select id,name,sex,age,phone from person
		<if test="_parameter!=null&amp;&amp;_parameter!=''">
			where name = #{_parameter,jdbcType=VARCHAR} or name like
			"%"#{_parameter,jdbcType=VARCHAR}"%"
		</if>
	</select>
	<insert id="Addone" parameterType="com.entity.Person">
		insert into person (id,name,sex,age,phone)
		values
		(#{id},#{name,jdbcType=VARCHAR},#{sex,jdbcType=INTEGER},#{age,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR})
	</insert>
	<delete id="Delete" parameterType="java.lang.Integer">
		delete from person
		where id = #{id}
	</delete>
	<update id="Update" parameterType="com.entity.Person">
		update person
		<set>
			<if test="name!=null&amp;&amp;name!=''">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="sex!=null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="age!=null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="phone!=null&amp;&amp;phone!=''">
				phone = #{phone,jdbcType=VARCHAR}
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>